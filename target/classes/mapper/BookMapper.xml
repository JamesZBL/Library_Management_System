<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zbl.dao.BookMapper">
    <resultMap id="BaseResultMap" type="com.zbl.entity.Book">
        <id column="book_id" property="bookId" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="number" property="number" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
		book_id, name, number
	</sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from book
        where book_id = #{bookId,jdbcType=BIGINT}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book
        where 1=1
    </select>

    <select id="selectPage" resultMap="BaseResultMap"
            parameterType="Map">
        select
        <include refid="Base_Column_List"/>
        from book books
        <where>
            1=1
            <if test="name  != null and  name !=''">
                and books.name like "%${name}%"
            </if>
            <if test=" startTime != null and  startTime !='' ">
                <![CDATA[ and books .timestamp >= STR_TO_DATE("${startTime}",'%Y-%m-%d %H:%i:%s') ]]>
            </if>
            <if test=" endTime != null  and endTime !='' ">
                <![CDATA[ and books .timestamp <= STR_TO_DATE("${endTime}",'%Y-%m-%d %H:%i:%s') ]]>
            </if>
            order by
            ${sort}
            ${order}
        </where>
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from book
		where book_id = #{bookId,jdbcType=BIGINT}
	</delete>
    <insert id="insert" parameterType="com.zbl.entity.Book">
		insert into book (book_id,
		name, number
		)
		values (#{bookId,jdbcType=BIGINT},
		#{name,jdbcType=VARCHAR},
		#{number,jdbcType=INTEGER}
		)
	</insert>
    <insert id="insertSelective" parameterType="com.zbl.entity.Book">
        insert into book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bookId != null">
                book_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="number != null">
                number,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bookId != null">
                #{bookId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="number != null">
                #{number,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zbl.entity.Book">
        update book
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="number != null">
                number = #{number,jdbcType=INTEGER},
            </if>
        </set>
        where book_id = #{bookId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zbl.entity.Book">
		update book
		set
		name = #{name,jdbcType=VARCHAR},
		number = #{number,jdbcType=INTEGER}
		where book_id = #{bookId,jdbcType=BIGINT}
	</update>
</mapper>