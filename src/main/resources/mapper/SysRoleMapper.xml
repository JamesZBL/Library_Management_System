<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zbl.dao.SysRoleMapper">
  <resultMap id="BaseResultMap" type="com.zbl.entity.SysRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="roleKey" jdbcType="VARCHAR" property="rolekey" />    
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <result column="status" jdbcType="INTEGER" property="status" />        
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    id, state, name,seq,status, roleKey, description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zbl.entity.SysRole">
    insert into sys_role (id, state, name, 
      roleKey, description)
    values (#{id,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{rolekey,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zbl.entity.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="rolekey != null">
        roleKey,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="rolekey != null">
        #{rolekey,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zbl.entity.SysRole">
    update sys_role
    <set>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="rolekey != null">
        roleKey = #{rolekey,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zbl.entity.SysRole">
    update sys_role
    set state = #{state,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      roleKey = #{rolekey,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
     <select id="selectResourceIdListByRoleId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT
            e.resId AS id
        FROM
            sys_role r
        LEFT JOIN sys_res_role e ON r.id = e.roleId
        WHERE
            r.id = #{id}
    </select>

    <select id="selectResourceListByRoleIdList" resultType="com.zbl.entity.SysResource"
            parameterType="java.lang.Integer">
        SELECT
            DISTINCT s.id AS id,
            s.NAME AS 'name',
            s.url AS url,
            s.description AS description,
            s.icon AS icon,
            s.pid AS pid,
            s.seq AS seq,
            s.STATUS AS 'status',
            s.open_mode AS openMode,
            s.resource_type AS resourceType,
            s.create_time AS createTime
        FROM
            sys_role r
        LEFT JOIN sys_res_role e ON r.id = e.roleId
        LEFT JOIN sys_resource s ON e.resId = s.id
        WHERE
            r.id in  
            <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
                #{item}
            </foreach>
        AND s.resource_type = 0
        ORDER BY seq
    </select>

    <select id="selectResourceListByRoleId" resultType="java.util.HashMap" parameterType="java.lang.Integer">
        SELECT
            e.id AS id,
            s.url AS url
        FROM
            sys_role r
        LEFT JOIN sys_res_role e ON r.id = e.role_id
        LEFT JOIN sys_resource s ON e.resource_id = s.id
        WHERE
            r.id = #{id}
    </select>

    <select id="selectRoleList" resultType="com.zbl.entity.SysRole">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        order by ${sort} ${order}
    </select>
</mapper>